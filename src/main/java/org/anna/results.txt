    (algorithm)   (n)  Mode  Cnt       Score       Error  Units
       classic     8  avgt    5       0.001 �     0.001  ms/op
       classic    32  avgt    5       0.043 �     0.002  ms/op
       classic    64  avgt    5       0.465 �     0.072  ms/op
       classic   128  avgt    5       3.950 �     1.055  ms/op
       classic   256  avgt    5      30.748 �     0.588  ms/op
       classic   512  avgt    5     298.109 �    55.046  ms/op
       classic  1024  avgt    5   10000.595 �   497.216  ms/op
      strassen     8  avgt    5       0.001 �     0.001  ms/op
      strassen    32  avgt    5       0.046 �     0.001  ms/op
      strassen    64  avgt    5       0.365 �     0.008  ms/op
      strassen   128  avgt    5     417.982 �    88.627  ms/op
      strassen   256  avgt    5    2715.299 �   116.171  ms/op
      strassen   512  avgt    5   20809.815 �  4793.685  ms/op
      strassen  1024  avgt    5  130910.558 � 11590.816  ms/op


       classic   16           0  avgt    5   0.008 �  0.003  ms/op
       classic   32           0  avgt    5   0.043 �  0.002  ms/op
       classic   64           0  avgt    5   0.355 �  0.004  ms/op
      strassen   16           0  avgt    5   0.006 �  0.001  ms/op
      strassen   32           0  avgt    5   0.043 �  0.001  ms/op
      strassen   64           0  avgt    5   0.349 �  0.019  ms/op
        sparse   16           0  avgt    5   0.226 �  0.004  ms/op
        sparse   32           0  avgt    5   2.079 �  0.757  ms/op
        sparse   64           0  avgt    5  16.488 �  0.703  ms/op
         cache   16           0  avgt    5   0.006 �  0.001  ms/op
         cache   32           0  avgt    5   0.034 �  0.002  ms/op
         cache   64           0  avgt    5   0.264 �  0.013  ms/op
          loop   16           0  avgt    5   0.006 �  0.001  ms/op
          loop   32           0  avgt    5   0.043 �  0.001  ms/op
          loop   64           0  avgt    5   0.344 �  0.052  ms/op
       classic  100           0  avgt    5    1.339 � 0.115  ms/op
       classic  128           0  avgt    5    2.841 � 0.036  ms/op
      strassen  128           0  avgt    5  368.931 � 6.743  ms/op
        sparse  100           0  avgt    5   52.804 � 1.137  ms/op
        sparse  128           0  avgt    5  113.278 � 1.380  ms/op
         cache  100           0  avgt    5    1.006 � 0.150  ms/op
         cache  128           0  avgt    5    2.131 � 0.905  ms/op
          loop  100           0  avgt    5    1.211 � 0.168  ms/op
          loop  128           0  avgt    5    2.528 � 0.180  ms/op

Big matrices no sparcity
       classic  1000           0  avgt    5   11947.335 �    1421.543  ms/op
       classic  1024           0  avgt    5   11826.100 �    3708.846  ms/op
      strassen  1000           timeout
      strassen  1024           0  avgt    5  129925.291 �    7515.714  ms/op
        sparse  1000           0  avgt    5  233729.185 � 1277204.638  ms/op
        sparse  1024           0  avgt    5  107254.967 �   85242.248  ms/op
         cache  1000           0  avgt    5    2691.818 �     519.854  ms/op
         cache  1024           0  avgt    5    2557.165 �    2362.751  ms/op
          loop  1000           0  avgt    5   10336.599 �     443.435  ms/op
          loop  1024           0  avgt    5   11149.146 �     414.924  ms/op

1000 n matrices sparcity test
  (algorithm)   (n)  (sparsity)  Mode  Cnt      Score      Error  Units
      classic  1000           0  avgt    5   11947.335 �    1421.543  ms/op
      classic  1000         0.5  avgt    5  10830.606 � 1635.475  ms/op
      classic  1000         0.9  avgt    5   9016.672 �  775.084  ms/op
       sparse  1000           0  avgt    5  233729.185 � 1277204.638  ms/op
       sparse  1000         0.5  avgt    5  25195.646 � 4119.592  ms/op
       sparse  1000         0.9  avgt    5   1575.898 �  370.724  ms/op
       cache  1000           0  avgt    5    2691.818 �     519.854  ms/op
        cache  1000         0.5  avgt    5   1272.571 �   31.139  ms/op
        cache  1000         0.9  avgt    5   1274.265 �   40.830  ms/op
         loop  1000           0  avgt    5   10336.599 �     443.435  ms/op
         loop  1000         0.5  avgt    5  10378.345 � 1117.307  ms/op
         loop  1000         0.9  avgt    5  10466.273 �  397.001  ms/op
  cachesparse (1024)           1000         0.5  avgt    5  24879.145 �  2713.596  ms/op
  cachesparse  (1024)         1000           0  avgt    5  88705.695 � 11025.141  ms/op
  cachesparse (1024)          1000         0.9  avgt    5   1821.357 �    85.978  ms/op

 Benchmark                                 (algorithm)  (blockSize)   (n)  (sparsity)  Mode  Cnt       Score       Error  Units
 cachesparse           64  1000           0  avgt    5  288085.470 � 48316.756  ms/op
  cachesparse           64  1000         0.5  avgt    5  104181.307 � 27358.376  ms/op
  cachesparse           64  1000         0.9  avgt    5    6349.095 �   127.332  ms/op
  cachesparse          128  1000         0.9  avgt    5  3426.382 � 841.556  ms/op
  cachesparse          256  1000         0.9  avgt    5  2082.317 � 449.113  ms/op
  cachesparse          512  1000         0.9  avgt    5  1736.803 � 160.070  ms/op
  cachesparse         1024  1000         0.9  avgt    5  1491.840 � 106.047  ms/op
  cachesparse         2048  1000         0.9  avgt    5  1493.296 � 136.880  ms/op

 Benchmark                                 (algorithm)  (blockSize)  (n)  (sparsity)  Mode  Cnt   Score    Error  Units
  MatrixBenchmark.testMatrixMultiplication      classic           16    8           0  avgt    5   0.001 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication      classic           16   16           0  avgt    5   0.006 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication      classic           16   32           0  avgt    5   0.047 �  0.012  ms/op
MatrixBenchmark.testMatrixMultiplication      classic           16   64           0  avgt    5   0.364 �  0.016  ms/op
MatrixBenchmark.testMatrixMultiplication     strassen           16    8           0  avgt    5   0.001 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication     strassen           16   16           0  avgt    5   0.006 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication     strassen           16   32           0  avgt    5   0.045 �  0.003  ms/op
MatrixBenchmark.testMatrixMultiplication     strassen           16   64           0  avgt    5   0.385 �  0.027  ms/op
MatrixBenchmark.testMatrixMultiplication       sparse           16    8           0  avgt    5   0.043 �  0.024  ms/op
MatrixBenchmark.testMatrixMultiplication       sparse           16   16           0  avgt    5   0.254 �  0.011  ms/op
MatrixBenchmark.testMatrixMultiplication       sparse           16   32           0  avgt    5   1.913 �  0.089  ms/op
MatrixBenchmark.testMatrixMultiplication       sparse           16   64           0  avgt    5  15.335 �  2.871  ms/op
MatrixBenchmark.testMatrixMultiplication        cache           16    8           0  avgt    5   0.002 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication        cache           16   16           0  avgt    5   0.006 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication        cache           16   32           0  avgt    5   0.030 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication        cache           16   64           0  avgt    5   0.244 �  0.048  ms/op
MatrixBenchmark.testMatrixMultiplication         loop           16    8           0  avgt    5   0.001 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication         loop           16   16           0  avgt    5   0.006 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication         loop           16   32           0  avgt    5   0.038 �  0.010  ms/op
MatrixBenchmark.testMatrixMultiplication         loop           16   64           0  avgt    5   0.291 �  0.050  ms/op
MatrixBenchmark.testMatrixMultiplication  cachesparse           16    8           0  avgt    5   0.032 �  0.001  ms/op
MatrixBenchmark.testMatrixMultiplication  cachesparse           16   16           0  avgt    5   0.494 �  0.030  ms/op
MatrixBenchmark.testMatrixMultiplication  cachesparse           16   32           0  avgt    5   4.448 �  0.572  ms/op
MatrixBenchmark.testMatrixMultiplication  cachesparse           16   64           0  avgt    5  50.957 �  4.229  ms/op

C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe --enable-preview "-javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin" -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath C:\Users\sajdo\IdeaProjects\BD_ind_three\target\classes;C:\Users\sajdo\.m2\repository\org\openjdk\jmh\jmh-core\1.35\jmh-core-1.35.jar;C:\Users\sajdo\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\sajdo\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar org.anna.Main
threads: 7
# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 8, nThreads = 1, sparsity = 0)

# Run progress: 0.00% complete, ETA 00:25:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.328 ms/op
# Warmup Iteration   2: 1.004 ms/op
# Warmup Iteration   3: 0.976 ms/op
# Warmup Iteration   4: 1.085 ms/op
# Warmup Iteration   5: 1.058 ms/op
Iteration   1: 1.103 ms/op
Iteration   2: 1.014 ms/op
Iteration   3: 1.028 ms/op
Iteration   4: 0.956 ms/op
Iteration   5: 0.898 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  1.000 �(99.9%) 0.299 ms/op [Average]
  (min, avg, max) = (0.898, 1.000, 1.103), stdev = 0.078
  CI (99.9%): [0.701, 1.299] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 8, nThreads = 2, sparsity = 0)

# Run progress: 6.67% complete, ETA 00:23:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.404 ms/op
# Warmup Iteration   2: 0.685 ms/op
# Warmup Iteration   3: 0.681 ms/op
# Warmup Iteration   4: 0.676 ms/op
# Warmup Iteration   5: 0.690 ms/op
Iteration   1: 0.685 ms/op
Iteration   2: 0.661 ms/op
Iteration   3: 0.660 ms/op
Iteration   4: 0.707 ms/op
Iteration   5: 0.674 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  0.677 �(99.9%) 0.074 ms/op [Average]
  (min, avg, max) = (0.660, 0.677, 0.707), stdev = 0.019
  CI (99.9%): [0.603, 0.752] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 8, nThreads = 5, sparsity = 0)

# Run progress: 13.33% complete, ETA 00:22:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.863 ms/op
# Warmup Iteration   2: 1.475 ms/op
# Warmup Iteration   3: 1.468 ms/op
# Warmup Iteration   4: 1.497 ms/op
# Warmup Iteration   5: 1.299 ms/op
Iteration   1: 1.474 ms/op
Iteration   2: 1.419 ms/op
Iteration   3: 1.438 ms/op
Iteration   4: 1.473 ms/op
Iteration   5: 1.490 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  1.459 �(99.9%) 0.111 ms/op [Average]
  (min, avg, max) = (1.419, 1.459, 1.490), stdev = 0.029
  CI (99.9%): [1.347, 1.570] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 8, nThreads = 7, sparsity = 0)

# Run progress: 20.00% complete, ETA 00:20:17
# Fork: 1 of 1
# Warmup Iteration   1: 1.153 ms/op
# Warmup Iteration   2: 1.869 ms/op
# Warmup Iteration   3: 1.974 ms/op
# Warmup Iteration   4: 1.553 ms/op
# Warmup Iteration   5: 1.855 ms/op
Iteration   1: 1.943 ms/op
Iteration   2: 1.844 ms/op
Iteration   3: 1.953 ms/op
Iteration   4: 1.953 ms/op
Iteration   5: 1.874 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  1.913 �(99.9%) 0.196 ms/op [Average]
  (min, avg, max) = (1.844, 1.913, 1.953), stdev = 0.051
  CI (99.9%): [1.717, 2.109] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 8, nThreads = 10, sparsity = 0)

# Run progress: 26.67% complete, ETA 00:18:35
# Fork: 1 of 1
# Warmup Iteration   1: 1.608 ms/op
# Warmup Iteration   2: 2.130 ms/op
# Warmup Iteration   3: 2.128 ms/op
# Warmup Iteration   4: 2.013 ms/op
# Warmup Iteration   5: 2.130 ms/op
Iteration   1: 1.903 ms/op
Iteration   2: 2.154 ms/op
Iteration   3: 2.158 ms/op
Iteration   4: 2.110 ms/op
Iteration   5: 2.160 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  2.097 �(99.9%) 0.424 ms/op [Average]
  (min, avg, max) = (1.903, 2.097, 2.160), stdev = 0.110
  CI (99.9%): [1.673, 2.521] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 64, nThreads = 1, sparsity = 0)

# Run progress: 33.33% complete, ETA 00:16:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.892 ms/op
# Warmup Iteration   2: 1.974 ms/op
# Warmup Iteration   3: 2.074 ms/op
# Warmup Iteration   4: 1.908 ms/op
# Warmup Iteration   5: 1.753 ms/op
Iteration   1: 1.939 ms/op
Iteration   2: 1.946 ms/op
Iteration   3: 1.924 ms/op
Iteration   4: 1.968 ms/op
Iteration   5: 2.053 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  1.966 �(99.9%) 0.197 ms/op [Average]
  (min, avg, max) = (1.924, 1.966, 2.053), stdev = 0.051
  CI (99.9%): [1.769, 2.163] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 64, nThreads = 2, sparsity = 0)

# Run progress: 40.00% complete, ETA 00:15:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.847 ms/op
# Warmup Iteration   2: 2.312 ms/op
# Warmup Iteration   3: 2.161 ms/op
# Warmup Iteration   4: 2.333 ms/op
# Warmup Iteration   5: 2.346 ms/op
Iteration   1: 2.424 ms/op
Iteration   2: 2.395 ms/op
Iteration   3: 2.164 ms/op
Iteration   4: 1.803 ms/op
Iteration   5: 1.823 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  2.122 �(99.9%) 1.154 ms/op [Average]
  (min, avg, max) = (1.803, 2.122, 2.424), stdev = 0.300
  CI (99.9%): [0.968, 3.275] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 64, nThreads = 5, sparsity = 0)

# Run progress: 46.67% complete, ETA 00:13:31
# Fork: 1 of 1
# Warmup Iteration   1: 1.035 ms/op
# Warmup Iteration   2: 1.719 ms/op
# Warmup Iteration   3: 1.724 ms/op
# Warmup Iteration   4: 1.631 ms/op
# Warmup Iteration   5: 1.724 ms/op
Iteration   1: 1.700 ms/op
Iteration   2: 1.722 ms/op
Iteration   3: 1.728 ms/op
Iteration   4: 1.717 ms/op
Iteration   5: 1.681 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  1.710 �(99.9%) 0.074 ms/op [Average]
  (min, avg, max) = (1.681, 1.710, 1.728), stdev = 0.019
  CI (99.9%): [1.635, 1.784] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 64, nThreads = 7, sparsity = 0)

# Run progress: 53.33% complete, ETA 00:11:49
# Fork: 1 of 1
# Warmup Iteration   1: 1.214 ms/op
# Warmup Iteration   2: 2.087 ms/op
# Warmup Iteration   3: 2.108 ms/op
# Warmup Iteration   4: 2.074 ms/op
# Warmup Iteration   5: 2.086 ms/op
Iteration   1: 2.106 ms/op
Iteration   2: 2.077 ms/op
Iteration   3: 2.104 ms/op
Iteration   4: 2.085 ms/op
Iteration   5: 2.068 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  2.088 �(99.9%) 0.064 ms/op [Average]
  (min, avg, max) = (2.068, 2.088, 2.106), stdev = 0.017
  CI (99.9%): [2.024, 2.152] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 64, nThreads = 10, sparsity = 0)

# Run progress: 60.00% complete, ETA 00:10:08
# Fork: 1 of 1
# Warmup Iteration   1: 1.911 ms/op
# Warmup Iteration   2: 1.395 ms/op
# Warmup Iteration   3: 1.632 ms/op
# Warmup Iteration   4: 1.967 ms/op
# Warmup Iteration   5: 1.798 ms/op
Iteration   1: 1.820 ms/op
Iteration   2: 2.057 ms/op
Iteration   3: 1.902 ms/op
Iteration   4: 1.556 ms/op
Iteration   5: 1.629 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  1.793 �(99.9%) 0.783 ms/op [Average]
  (min, avg, max) = (1.556, 1.793, 2.057), stdev = 0.203
  CI (99.9%): [1.010, 2.576] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 128, nThreads = 1, sparsity = 0)

# Run progress: 66.67% complete, ETA 00:08:26
# Fork: 1 of 1
# Warmup Iteration   1: 2.981 ms/op
# Warmup Iteration   2: 2.962 ms/op
# Warmup Iteration   3: 2.926 ms/op
# Warmup Iteration   4: 2.925 ms/op
# Warmup Iteration   5: 3.007 ms/op
Iteration   1: 2.927 ms/op
Iteration   2: 2.920 ms/op
Iteration   3: 2.944 ms/op
Iteration   4: 3.089 ms/op
Iteration   5: 3.233 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  3.023 �(99.9%) 0.526 ms/op [Average]
  (min, avg, max) = (2.920, 3.023, 3.233), stdev = 0.137
  CI (99.9%): [2.497, 3.548] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 128, nThreads = 2, sparsity = 0)

# Run progress: 73.33% complete, ETA 00:06:45
# Fork: 1 of 1
# Warmup Iteration   1: 2.509 ms/op
# Warmup Iteration   2: 2.442 ms/op
# Warmup Iteration   3: 2.422 ms/op
# Warmup Iteration   4: 2.427 ms/op
# Warmup Iteration   5: 2.264 ms/op
Iteration   1: 2.266 ms/op
Iteration   2: 2.263 ms/op
Iteration   3: 2.260 ms/op
Iteration   4: 2.255 ms/op
Iteration   5: 2.259 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  2.261 �(99.9%) 0.017 ms/op [Average]
  (min, avg, max) = (2.255, 2.261, 2.266), stdev = 0.004
  CI (99.9%): [2.244, 2.277] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 128, nThreads = 5, sparsity = 0)

# Run progress: 80.00% complete, ETA 00:05:04
# Fork: 1 of 1
# Warmup Iteration   1: 1.899 ms/op
# Warmup Iteration   2: 1.772 ms/op
# Warmup Iteration   3: 1.773 ms/op
# Warmup Iteration   4: 1.769 ms/op
# Warmup Iteration   5: 1.770 ms/op
Iteration   1: 1.784 ms/op
Iteration   2: 1.782 ms/op
Iteration   3: 1.785 ms/op
Iteration   4: 1.832 ms/op
Iteration   5: 2.023 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  1.841 �(99.9%) 0.400 ms/op [Average]
  (min, avg, max) = (1.782, 1.841, 2.023), stdev = 0.104
  CI (99.9%): [1.442, 2.241] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 128, nThreads = 7, sparsity = 0)

# Run progress: 86.67% complete, ETA 00:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 2.144 ms/op
# Warmup Iteration   2: 2.032 ms/op
# Warmup Iteration   3: 2.088 ms/op
# Warmup Iteration   4: 2.021 ms/op
# Warmup Iteration   5: 2.032 ms/op
Iteration   1: 2.066 ms/op
Iteration   2: 2.024 ms/op
Iteration   3: 2.066 ms/op
Iteration   4: 2.034 ms/op
Iteration   5: 2.028 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  2.043 �(99.9%) 0.080 ms/op [Average]
  (min, avg, max) = (2.024, 2.043, 2.066), stdev = 0.021
  CI (99.9%): [1.963, 2.124] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 23.0.1, OpenJDK 64-Bit Server VM, 23.0.1+11-39
# VM invoker: C:\Users\sajdo\.jdks\openjdk-23.0.1\bin\java.exe
# VM options: --enable-preview -javaagent:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\lib\idea_rt.jar=54279:C:\Users\sajdo\AppData\Local\Programs\IntelliJ IDEA Ultimate\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication
# Parameters: (algorithm = paralel, blockSize = 16, n = 128, nThreads = 10, sparsity = 0)

# Run progress: 93.33% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 2.415 ms/op
# Warmup Iteration   2: 2.308 ms/op
# Warmup Iteration   3: 2.307 ms/op
# Warmup Iteration   4: 2.337 ms/op
# Warmup Iteration   5: 2.362 ms/op
Iteration   1: 2.327 ms/op
Iteration   2: 2.335 ms/op
Iteration   3: 2.327 ms/op
Iteration   4: 2.325 ms/op
Iteration   5: 2.427 ms/op


Result "org.anna.benchmark.MatrixBenchmark.testMatrixMultiplication":
  2.348 �(99.9%) 0.172 ms/op [Average]
  (min, avg, max) = (2.325, 2.348, 2.427), stdev = 0.045
  CI (99.9%): [2.176, 2.520] (assumes normal distribution)


# Run complete. Total time: 00:25:19

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                 (algorithm)  (blockSize)  (n)  (nThreads)  (sparsity)  Mode  Cnt  Score   Error  Units
MatrixBenchmark.testMatrixMultiplication      paralel           16    8           1           0  avgt    5  1.000 � 0.299  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16    8           2           0  avgt    5  0.677 � 0.074  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16    8           5           0  avgt    5  1.459 � 0.111  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16    8           7           0  avgt    5  1.913 � 0.196  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16    8          10           0  avgt    5  2.097 � 0.424  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16   64           1           0  avgt    5  1.966 � 0.197  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16   64           2           0  avgt    5  2.122 � 1.154  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16   64           5           0  avgt    5  1.710 � 0.074  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16   64           7           0  avgt    5  2.088 � 0.064  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16   64          10           0  avgt    5  1.793 � 0.783  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16  128           1           0  avgt    5  3.023 � 0.526  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16  128           2           0  avgt    5  2.261 � 0.017  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16  128           5           0  avgt    5  1.841 � 0.400  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16  128           7           0  avgt    5  2.043 � 0.080  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16  128          10           0  avgt    5  2.348 � 0.172  ms/op

MatrixBenchmark.testMatrixMultiplication      paralel           16  1024           1           0  avgt    5  12394.291 � 1327.815  ms/op
MatrixBenchmark.testMatrixMultiplication      paralel           16  1024           5           0  avgt    5   4739.669 �   94.846  ms/op